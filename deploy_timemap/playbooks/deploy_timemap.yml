- hosts: "{{ lookup('env', 'ANSIBLE_HOST_GROUP') or 'localhost' }}"
  user: "{{ lookup('env', 'ANSIBLE_SSH_USER') or 'localhost' }}"
  vars_files:
    - ../vars/main.yml
    - ../vars/vault.yml
  tasks:
    - import_tasks: ../tasks/prepare.yml
      tags: [prepare]
      become: yes

    - import_tasks: ../tasks/datasheet.yml
      tags: [datasheet]
      become: yes

    - name: ansible host - clean timemap repo state
      local_action:
        module: file
        state: absent
        path: timemap
      tags: [timemap]
      become: no

    - name: ansible host - checkout timemap repo
      local_action:
        module: git
        repo: "{{ lookup('env', 'TIMEMAP_GIT_REPOSITORY') or 'https://github.com/forensic-architecture/timemap' }}"
        dest: timemap
        version: "{{ lookup('env', 'TIMEMAP_GIT_BRANCH') or 'develop' }}"
      tags: [timemap]
      become: no

    - name: ansible host - yarn install
      local_action:
        module: yarn
        path: timemap
        state: latest
      tags: [timemap]
      become: no

    - include_tasks:
        file: ../tasks/timemap.yml
        apply:
          tags: [timemap]
      tags: [always]
      loop: "{{ timemaps }}"
      loop_control:
        loop_var: timemap

    - name: ansible host - remove timemap repo
      local_action:
        module: file
        state: absent
        path: timemap
      tags: [timemap]
      become: no

    - include_tasks:
        file: ../tasks/nginx.yml
        apply:
          tags: [nginx]
          become: yes
      loop: "{{ timemaps }}"
      loop_control:
        loop_var: timemap
      tags: [always]

    - name: enable config
      file: >
        dest=/etc/nginx/sites-enabled/default
        src=/etc/nginx/sites-available/default
        state=link
      tags: [nginx]

    - name: restart nginx
      service: name=nginx state=restarted enabled=yes
      tags: [nginx]
